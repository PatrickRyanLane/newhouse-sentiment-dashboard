name: Daily Brands Pipeline

on:
  # Manual run with optional date
  workflow_dispatch:
    inputs:
      date:
        description: "Run date in UTC (YYYY-MM-DD). Leave blank for today."
        required: false
        type: string
  # Scheduled run
  schedule:
    - cron: "10 9 * * *"   # 05:10 ET daily

permissions:
  contents: write

concurrency:
  group: data-writes
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ============================================
      # Setup Google Sheets credentials
      # ============================================
      - name: Setup Google Sheets credentials
        run: |
          mkdir -p credentials
          echo "${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}" | base64 -d > credentials/google-sheets-credentials.json
          chmod 600 credentials/google-sheets-credentials.json
          echo "‚úÖ Google Sheets credentials configured"

      - name: Ensure folders
        run: |
          mkdir -p data/daily_counts
          mkdir -p data/processed_articles
          mkdir -p data/processed_serps
          mkdir -p rosters

      # ============================================
      # All brand scripts use BRAND Sheet ID
      # ============================================
      
      - name: Build brand articles
        env:
          RUN_DATE: ${{ github.event.inputs.date || '' }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_BRAND }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          WRITE_TO_SHEETS: 'true'
        run: |
          set -euo pipefail
          DATE_TO_RUN="${RUN_DATE:-$(date -u +%F)}"
          echo "Running news_articles_brands.py for ${DATE_TO_RUN}"
          echo "Writing to Brand Sheet: ${GOOGLE_SHEET_ID:0:20}..."
          python scripts/news_articles_brands.py --date "${DATE_TO_RUN}"

      - name: Aggregate brand news sentiment
        env:
          RUN_DATE: ${{ github.event.inputs.date || '' }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_BRAND }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          WRITE_TO_SHEETS: 'true'
        run: |
          set -euo pipefail
          DATE_TO_RUN="${RUN_DATE:-$(date -u +%F)}"
          echo "Running news_sentiment_brands.py for ${DATE_TO_RUN}"
          echo "Writing to Brand Sheet: ${GOOGLE_SHEET_ID:0:20}..."
          python scripts/news_sentiment_brands.py --date "${DATE_TO_RUN}"

      - name: Process brand SERPs
        shell: bash
        env:
          DATE_IN: ${{ github.event.inputs.date }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_BRAND }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          WRITE_TO_SHEETS: 'true'
        run: |
          set -euo pipefail
          DATE="${DATE_IN:-$(date -u +%F)}"
          ROW="data/processed_serps/${DATE}-brand-serps-modal.csv"
      
          echo "Processing brand SERPs for ${DATE}"
          echo "Writing to Brand Sheet: ${GOOGLE_SHEET_ID:0:20}..."
          python scripts/process_serps_brands.py --date "${DATE}"

      # ============================================
      # Cleanup old tabs from BRAND sheet
      # ============================================
      - name: Cleanup old tabs (Brand Sheet)
        env:
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_BRAND }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          KEEP_DAYS: '30'
        run: |
          echo "üóëÔ∏è  Cleaning up Brand Sheet tabs (keeping last ${KEEP_DAYS} days)..."
          python scripts/cleanup_old_tabs.py || echo "‚ö†Ô∏è  Cleanup failed (non-critical)"

      # ============================================
      # Commit & push
      # ============================================
      - name: Commit outputs
        shell: bash
        env:
          RUN_DATE: ${{ github.event.inputs.date || '' }}
        run: |
          set -euo pipefail

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          git fetch origin main
          git checkout main
          git pull --rebase --autostash origin main

          git add -A
          if git diff --cached --quiet; then
            echo "No data changes to commit."
            exit 0
          fi

          DATE_TO_USE="${RUN_DATE:-$(date -u +%F)}"
          git commit -m "brand pipeline: update data (${DATE_TO_USE})"

          if ! git push origin HEAD:main; then
            echo "Push rejected; rebasing once‚Ä¶"
            git pull --rebase --autostash origin main
            git push origin HEAD:main
          fi

      # ============================================
      # Clean up credentials
      # ============================================
      - name: Clean up credentials
        if: always()
        run: |
          if [ -f credentials/google-sheets-credentials.json ]; then
            rm -f credentials/google-sheets-credentials.json
            echo "‚úÖ Credentials cleaned up"
          fi
