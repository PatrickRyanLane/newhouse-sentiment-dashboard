name: Daily Brands Pipeline

on:
  schedule:
    # 6:15am UTC daily (adjust if you want)
    - cron: "15 6 * * *"
  workflow_dispatch:
    inputs:
      run_date:
        description: "Date to process (YYYY-MM-DD). Leave blank for today (UTC)."
        required: false
        type: string

permissions:
  contents: write   # needed to commit data files back

concurrency:
  group: daily-brands
  cancel-in-progress: false

jobs:
  build-brands:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # If you have requirements.txt, use that; otherwise install the minimums:
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests beautifulsoup4 lxml pandas vaderSentiment
          fi

      - name: Resolve date (UTC)
        id: when
        shell: bash
        run: |
          if [ -n "${{ github.event.inputs.run_date }}" ]; then
            DATE="${{ github.event.inputs.run_date }}"
          else
            DATE="$(date -u +%F)"
          fi
          echo "date=$DATE" >> "$GITHUB_OUTPUT"
          echo "Processing date: $DATE"

      # --- ARTICLES: build daily brand articles (Google News RSS) ---
      - name: Build brand articles
        env:
          RUN_DATE: ${{ steps.when.outputs.date }}
        run: |
          echo "Running news_articles_brands.py for $RUN_DATE"
          python scripts/news_articles_brands.py --date "$RUN_DATE" || python scripts/news_articles_brands.py

      # --- SENTIMENT: aggregate daily article counts + update daily_counts.csv ---
      - name: Aggregate article sentiment (brands)
        env:
          RUN_DATE: ${{ steps.when.outputs.date }}
        run: |
          echo "Running news_sentiment_brands.py for $RUN_DATE"
          python scripts/news_sentiment_brands.py --date "$RUN_DATE" || python scripts/news_sentiment_brands.py

      # --- SERPs: process brand SERPs (rows + processed + rolling index) ---
      - name: Process SERPs (brands)
        env:
          RUN_DATE: ${{ steps.when.outputs.date }}
        run: |
          echo "Running process_serps_brands.py for $RUN_DATE"
          python scripts/process_serps_brands.py --date "$RUN_DATE" || python scripts/process_serps_brands.py

      # Commit any changed CSVs back to the repo
      - name: Commit & push data updates
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No data changes to commit."
          else
            git commit -m "brands: data refresh for ${{ steps.when.outputs.date }}"
            git push
          fi
