name: Daily CEO Pipeline

on:
  schedule:
    - cron: "10 10 * * *"   # 10:10 UTC (one hour after brands)
  workflow_dispatch:
    inputs:
      date:
        description: "Run date in UTC (YYYY-MM-DD). Leave blank for today."
        required: false
        type: string

permissions:
  contents: write

concurrency:
  group: daily-ceos-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: '1'
      TZ: America/New_York

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ============================================
      # Setup Google Sheets credentials
      # ============================================
      - name: Setup Google Sheets credentials
        run: |
          mkdir -p credentials
          echo "${{ secrets.GOOGLE_CREDENTIALS_BASE64 }}" | base64 -d > credentials/google-sheets-credentials.json
          chmod 600 credentials/google-sheets-credentials.json
          echo "‚úÖ Google Sheets credentials configured"

      - name: Ensure folders
        run: |
          mkdir -p data/daily_counts
          mkdir -p data/processed_articles
          mkdir -p data/processed_serps
          mkdir -p rosters

      # ============================================
      # All CEO scripts use CEO Sheet ID
      # ============================================

      - name: Build daily CEO articles (Google News RSS)
        env:
          RUN_DATE: ${{ github.event.inputs.date || '' }}
          ARTICLES_MAX_PER_ALIAS: "25"
          ARTICLES_SLEEP_SEC: "0.35"
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_CEO }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          WRITE_TO_SHEETS: 'true'
        run: |
          DATE_TO_RUN="${RUN_DATE:-$(date -u +%F)}"
          echo "Running news_articles_ceos.py for ${DATE_TO_RUN}"
          echo "Writing to CEO Sheet: ${GOOGLE_SHEET_ID:0:20}..."
          ARTICLES_DATE="${DATE_TO_RUN}" python scripts/news_articles_ceos.py

      - name: Run daily CEO sentiment (counts)
        env:
          RUN_DATE: ${{ github.event.inputs.date || '' }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_CEO }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          WRITE_TO_SHEETS: 'true'
        run: |
          DATE_TO_RUN="${RUN_DATE:-$(date -u +%F)}"
          echo "Running news_sentiment_ceos.py for ${DATE_TO_RUN}"
          echo "Writing to CEO Sheet: ${GOOGLE_SHEET_ID:0:20}..."
          python scripts/news_sentiment_ceos.py --date "${DATE_TO_RUN}"

      - name: Process CEO SERPs
        shell: bash
        env:
          DATE_IN: ${{ github.event.inputs.date }}
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_CEO }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          WRITE_TO_SHEETS: 'true'
        run: |
          set -euo pipefail
          DATE="${DATE_IN:-$(date -u +%F)}"
          ROW="data/processed_serps/${DATE}-ceo-serps-rows.csv"
      
          if [ -s "$ROW" ]; then
            echo "SERP rows already exist for ${DATE}; skipping."
            exit 0
          fi
      
          echo "Processing CEO SERPs for ${DATE}"
          echo "Writing to CEO Sheet: ${GOOGLE_SHEET_ID:0:20}..."
          python scripts/process_serps_ceos.py --date "${DATE}"

      # ============================================
      # Cleanup old tabs from CEO sheet
      # ============================================
      - name: Cleanup old tabs (CEO Sheet)
        env:
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID_CEO }}
          GOOGLE_CREDENTIALS_PATH: credentials/google-sheets-credentials.json
          KEEP_DAYS: '30'
        run: |
          echo "üóëÔ∏è  Cleaning up CEO Sheet tabs (keeping last ${KEEP_DAYS} days)..."
          python scripts/cleanup_old_tabs.py || echo "‚ö†Ô∏è  Cleanup failed (non-critical)"

      # ============================================
      # Commit & push
      # ============================================
      - name: Commit & push changes (if any)
        env:
          RUN_DATE: ${{ github.event.inputs.date || '' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            DATE_TO_USE="${RUN_DATE:-$(date -u +%F)}"
            git commit -m "chore(ceos): update CEO counts, articles & SERPs for ${DATE_TO_USE}"
            git pull --rebase --autostash || true
            git push
          fi

      # ============================================
      # Clean up credentials
      # ============================================
      - name: Clean up credentials
        if: always()
        run: |
          if [ -f credentials/google-sheets-credentials.json ]; then
            rm -f credentials/google-sheets-credentials.json
            echo "‚úÖ Credentials cleaned up"
          fi
